version: 0.2
env:
  secrets-manager:
    LOGIN: prod/sonar:sonartoken2
    HOST: prod/sonar:HOST
    Organization: prod/sonar:Organization
    Project: prod/sonar:Project2
phases:
  install:
    runtime-versions:
      golang: 1.14
      java: corretto11
    commands:
      - echo "installing dependencies..."
      - apt-get update
      - apt-get install -y jq
      - go mod vendor
      - wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.6.2.2472-linux.zip
      - unzip ./sonar-scanner-cli-4.6.2.2472-linux.zip
      - export PATH=$PATH:./sonar-scanner-4.6.2.2472-linux/bin/
      # - ln -sv /usr/local/sonar-scanner/bin/sonar-scanner /usr/local/bin/sonar-scanner
  build:
    commands:
      - echo "zipping deployment package..."
      - sonar-scanner -Dsonar.login=$LOGIN -Dsonar.host.url=$HOST -Dsonar.projectKey=$Project -Dsonar.sources=. -Dsonar.organization=$Organization
      - sleep 5
      - curl https://sonarcloud.io/api/qualitygates/project_status?projectKey=$Project >result.json
      - cat result.json
      - if [ (jq -r '.projectStatus.status' result.json) = ERROR ] ; then $CODEBUILD_BUILD_SUCCEEDING -eq 0;fi
      - cd checkin/anti-fraud/
      - GOOS=linux GOARCH=amd64 go build -o anti-fraud-bin
      - zip -g anti-fraud-bin.zip anti-fraud-bin
  post_build:
    commands:
      - echo "updating lambda function..."
      # - aws lambda update-function-code --function-name anti_fraud_checkin --zip-file fileb://deployment_package.zip
      - cd ../../
      - mv checkin/anti-fraud/anti-fraud-bin.zip anti-fraud-bin.zip
      - echo "DONE"
artifacts:
  files:
    - anti-fraud-bin.zip
